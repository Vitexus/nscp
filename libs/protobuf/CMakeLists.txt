cmake_minimum_required(VERSION 2.6)

WRAP_PROTO(PROTO_PLUGIN_SRC plugin.proto)

SET(TARGET nscp_protobuf)


SET(SRCS
	${PROTO_PLUGIN_SRC_C}
)
IF(WIN32)
	SET(SRCS
		${SRCS}
		plugin.proto
		${PROTO_PLUGIN_SRC_H}
	)
ENDIF(WIN32)
NSCP_MAKE_LIBRARY(${TARGET} "${SRCS}")
NSCP_FORCE_INCLUDE(${TARGET} ${BUILD_ROOT_FOLDER}/include/nscapi/dll_defines_protobuf.hpp)

TARGET_LINK_LIBRARIES(${TARGET}
	${PROTOBUF_LIBRARY}
)

IF(PROTOC_GEN_JSON_FOUND AND JSON_SPIRIT_FOUND)
	SET(TARGET nscp_json_pb)

	SET(SRCS
		${PROTO_PLUGIN_SRC_JSON_C}
	)
	IF(WIN32)
		SET(SRCS
			${SRCS}
			plugin.proto
			${PROTO_PLUGIN_SRC_JSON_H}
		)
	ENDIF(WIN32)

	INCLUDE_DIRECTORIES(${JSON_SPIRIT_INCLUDE_DIR})
	ADD_DEFINITIONS(-DHAVE_JSON_SPIRIT ${NSCP_GLOBAL_DEFINES})
	INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR}/libs/protobuf)
	
	IF(USE_STATIC_RUNTIME)
		ADD_DEFINITIONS(-Djson_protobuf_NOLIB)
		ADD_DEFINITIONS(-DJSON_SPIRIT_STATIC_LINKED)
	ENDIF(USE_STATIC_RUNTIME)
	NSCP_MAKE_LIBRARY(${TARGET} "${SRCS}")
	NSCP_FORCE_INCLUDE(${TARGET} ${BUILD_ROOT_FOLDER}/include/nscapi/dll_defines_protobuf.hpp)

	TARGET_LINK_LIBRARIES(${TARGET}
		${PROTOBUF_LIBRARY}
		nscp_protobuf
		json_spirit
	)
ENDIF()


IF (PROTOC_GEN_LUA_FOUND AND HAVE_LUA)
	SET(TARGET nscp_lua_pb)

	SET(SRCS
		${PROTO_PLUGIN_SRC_LUA_C}
	)
	IF(WIN32)
		SET(SRCS
			${SRCS}
			plugin.proto
			${PROTO_PLUGIN_SRC_LUA_H}
		)
	ENDIF(WIN32)
	INCLUDE_DIRECTORIES(${LUA_INCLUE_DIR})
	INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR}/libs/protobuf)
	ADD_DEFINITIONS(${NSCP_GLOBAL_DEFINES})
	
	IF(MSVC)
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4267 /wd4244 /wd4702 /wd4800 /wd4275 /wd4251 /wd4100 /wd4125")
	ENDIF(MSVC)

	IF(USE_STATIC_RUNTIME)
		ADD_DEFINITIONS(-Dlua_protobuf_NOLIB)
	ELSE(USE_STATIC_RUNTIME)
		ADD_DEFINITIONS(-Dlua_protobuf_EXPORTS)
	ENDIF(USE_STATIC_RUNTIME)
	NSCP_MAKE_LIBRARY(${TARGET} "${SRCS}")
	NSCP_FORCE_INCLUDE(${TARGET} ${BUILD_ROOT_FOLDER}/include/nscapi/dll_defines_protobuf.hpp)

	TARGET_LINK_LIBRARIES(${TARGET}
		${PROTOBUF_LIBRARY}
		nscp_protobuf
		${LUA_LIB}
	)

ENDIF (PROTOC_GEN_LUA_FOUND AND HAVE_LUA)